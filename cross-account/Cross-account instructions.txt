----------------------------------------------------------------------------------------------------------------------------
[1]  On the purple s3 account, go to policies and create a policy called "s3-list-Z"
----------------------------------------------------------------------------------------------------------------------------

Create Policy

S3

Read

Check "ListAllMyBuckets"

Next

Call it "s3-list-Z"

Create Policy

----------------------------------------------------------------------------------------------------------------------------
[2] On the purple s3 account, go to roles and create a role called "CrossZ"
----------------------------------------------------------------------------------------------------------------------------

Create Role

Custom trust policy

Scroll down and click Add a principal

Under select principal type select AWS Account and root user

Find out the number for the purple lambda account and type 

arn:aws:iam::xxxxxxxxxxxx:root

Where xxxxxxxxxxxx is the number of your blue lambda account

In this case I will add:

arn:aws:iam::864917095421:root

click next

type list-

select the radio button next to "s3-list-Z"

next

Name the role "CrossZ"

Create role

----------------------------------------------------------------------------------------------------------------------------
[3] On the blue lambda account, (in this case the one starting with 8649), create a policy called "Cross-Account-Policy-Z"
----------------------------------------------------------------------------------------------------------------------------

Go to IAM

Create policy

For service, choose STS

under Write, choose AssumeRole

Click add ARNs

Find out the number of your target account

Enter arn:aws:iam::xxxxxxxxxxxx:role/CrossZ

Where xxxxxxxxxxxx is the number of your target account

In this case I will add:

arn:aws:iam::011698514599:role/CrossZ

Add ARNs

Next 

For Policy Name - call the role "Cross-Account-Policy-Z"

Click create policy. 

----------------------------------------------------------------------------------------------------------------------------
[4] Go to the blue lambda account Create a lambda function
----------------------------------------------------------------------------------------------------------------------------

Bucket-test

Runtime Python 3.10

Create a new role with basic Lambda permissions

Create Function

Configuration

Permissions

Edit

At the bottom click View the [name]-role-xxxxxxxx role  on the IAM console.

Click add permissions

Attach policies, type the role you created earlier: "Cross-Account-Policy-Z"

Check the box and add permissions

Close IAM. 

Back in the lambda - click General configuration, and edit timeout to 5 minutes. 

CLick save. 

Using the lambda code inside the dotted lines below, replace the xxxxxx with the purple s3 account number. 

----------------------------------------------------------------------------------------------------------------------------
Delete all original code in the lambda_function, then add the above to the lambda_function. 
----------------------------------------------------------------------------------------------------------------------------

# [4] Also add code
import boto3

def lambda_handler(event, context):
    
    # create an STS client object that represents a live connection to the 
    # STS service
    sts_client = boto3.client('sts')    
    # Call the assume_role method of the STSConnection object and pass the role
    # ARN and a role session name.
    assumed_role_object=sts_client.assume_role(
        RoleArn="arn:aws:iam::xxxxxxxxxxxx:role/CrossZ",
        RoleSessionName="AssumeRoleSession1"
    )
    
    # From the response that contains the assumed role, get the temporary 
    # credentials that can be used to make subsequent API calls
    credentials=assumed_role_object['Credentials']    
    # Use the temporary credentials that AssumeRole returns to make a 
    # connection to Amazon S3  
    s3r=boto3.resource(
        's3',
        aws_access_key_id=credentials['AccessKeyId'],
        aws_secret_access_key=credentials['SecretAccessKey'],
        aws_session_token=credentials['SessionToken'],
    )
    # Use the Amazon S3 resource object that is now configured with the 
    # credentials to access your S3 buckets. 
    for bucket in s3r.buckets.all():
        print(bucket.name)

if __name__ == '__main__':
    event = "foo"
    context = "bar"
    lambda_handler(event, context)

----------------------------------------------------------------------------------------------------------------------------
Testing: 
----------------------------------------------------------------------------------------------------------------------------

Next: 

Deploy and press test. 

If prompted, type "test" in event name

save

Test

You should see buckets which exist on the purple account. 
